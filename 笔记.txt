1.搭建开发环境
  npm i -g koa-generator
  koa2 -e app  //-e表示带ejs模板


2.路由--动态参数
router.get('/loadmore/:username/:pageindex', async (ctx, next) => {
  const {username,pageindex} = ctx.params;
  ctx.body = {
    title: 'this is loadmore page',
    username,
    pageindex
  }
})

 post 请求
 router.post('/login',async (ctx,next)=>{
   const{username,password}= ctx.request.body;
   ctx.body = {
     username,
     password
   }
 })

3.ejs 模板  如果不确定传不传，可以使用locals
  await ctx.render('index', {
    title: 'Hello Koa 2!',
    msg:'123'  //--->变量
  })

  if判断
    <body>
      <h1><%= title %></h1>
      <p>EJS Welcome to <%= title %></p>
      <p><%= locals.msg %></p>
      <% if(isMe) { %>
       <a>aaaa</a>
      <% } else { %>
      <button>ddd</button>
     <%}%>
    </body>

  组件化
<div>
    <% if(isMe) { %>
        <a>aaaa</a>
    <% } else { %>
        <button>ddd</button>
    <%}%>
</div>


使用组件
<%- include('widgets/userinfo', {
      isMe
    })%>

 遍历
 <ul>
   <% users.forEach(user=>{ %>
     <%- include('user/show', {user: user}); %>
   <% }); %>
 </ul>


4.mysql 外键约束
  插入和删除同步更新CASCADE

5.sequelize orm工具  对象关系映射

